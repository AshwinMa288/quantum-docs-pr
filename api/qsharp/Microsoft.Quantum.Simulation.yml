### YamlMime:QSharpNamespace
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.simulation
name: Microsoft.Quantum.Simulation
summary: |2-
   # Summary
   This namespace contains functions and operations for coherently simulating
   the dynamics of quantum systems.
functions:
- uid: microsoft.quantum.simulation.addgeneratorsystems
  summary: Adds two `GeneratorSystem`s to create a new `GeneratorSystem`.
- uid: microsoft.quantum.simulation.blockencodingbylcu
  summary: Encodes an operator of interest into a `BlockEncoding`.
- uid: microsoft.quantum.simulation.blockencodingreflectionbylcu
  summary: Encodes an operator of interest into a `BlockEncodingReflection`.
- uid: microsoft.quantum.simulation.blockencodingtoreflection
  summary: Converts a `BlockEncoding` into an equivalent `BLockEncodingReflection`.
- uid: microsoft.quantum.simulation.getgeneratorsystemfunction
  summary: Retrieves the `GeneratorIndex` function in a `GeneratorSystem`.
- uid: microsoft.quantum.simulation.getgeneratorsystemnterms
  summary: Retrieves the number of terms in a `GeneratorSystem`.
- uid: microsoft.quantum.simulation.identitygeneratorindex
  summary: |-
    Returns a generator index consistent with the zero
    Hamiltonian, `H = 0`, which corresponds to the identity evolution operation.
- uid: microsoft.quantum.simulation.identitygeneratorsystem
  summary: |-
    Returns a generator system consistent with the zero
    Hamiltonian `H = 0`, which corresponds to the identity evolution operation.
- uid: microsoft.quantum.simulation.identitytimedependentgeneratorsystem
  summary: |-
    Returns a time-dependent generator system consistent with the
    Hamiltonian `H(s) = 0`.
- uid: microsoft.quantum.simulation.interpolatedevolution
  summary: |-
    Interpolates between two generators with a uniform schedule,
    returning an operation that applies simulated evolution under
    the resulting time-dependent generator to a qubit register.
- uid: microsoft.quantum.simulation.interpolategeneratorsystems
  summary: |-
    Returns a `TimeDependentGeneratorSystem` representing the linear
    interpolation between two `GeneratorSystem`s.
- uid: microsoft.quantum.simulation.intstopaulis
  summary: |-
    Converts an array of integers to an array of single-qubit Pauli
    operators.
- uid: microsoft.quantum.simulation.inttopauli
  summary: Converts a integer to a single-qubit Pauli operator.
- uid: microsoft.quantum.simulation.multiplygeneratorindex
  summary: Multiplies the coefficient in a `GeneratorIndex`.
- uid: microsoft.quantum.simulation.multiplygeneratorsystem
  summary: Multiplies the coefficient of all terms in a `GeneratorSystem`.
- uid: microsoft.quantum.simulation.pauliblockencoding
  summary: Creates a block-encoding unitary for a Hamiltonian.
- uid: microsoft.quantum.simulation.paulicoefficientfromgenidx
  summary: Extracts the coefficient of a Pauli term described by a `GeneratorIndex`.
- uid: microsoft.quantum.simulation.paulievolutionfunction
  summary: |-
    Represents a dynamical generator as a set of simulatable gates and an
    expansion in the Pauli basis.
- uid: microsoft.quantum.simulation.paulievolutionset
  summary: |-
    Represents a dynamical generator as a set of simulatable gates and an
    expansion in the Pauli basis.
- uid: microsoft.quantum.simulation.paulistringfromgenidx
  summary: |-
    Extracts the Pauli string and its qubit indices of a Pauli term described
    by a `GeneratorIndex`.
- uid: microsoft.quantum.simulation.quantumwalkbyqubitization
  summary: Converts a block-encoding reflection into a quantum walk.
- uid: microsoft.quantum.simulation.sumgeneratorsystems
  summary: Adds multiple `GeneratorSystem`s to create a new GeneratorSystem.
- uid: microsoft.quantum.simulation.timedependenttrottersimulationalgorithm
  summary: |-
    `TimeDependentSimulationAlgorithm` function that uses a Trotter–Suzuki
    decomposition to approximate a unitary operator that solves the
    time-dependent Schrodinger equation.
- uid: microsoft.quantum.simulation.trottersimulationalgorithm
  summary: |-
    `SimulationAlgorithm` function that uses a Trotter–Suzuki
    decomposition to approximate the time-evolution operator _exp(-iHt)_.
- uid: microsoft.quantum.simulation.trotterstep
  summary: |-
    Implements a single time-step of time-evolution by the system
    described in an `EvolutionGenerator` using a Trotter–Suzuki
    decomposition.
operations:
- uid: microsoft.quantum.simulation.adiabaticstateenergyunitary
  summary: |-
    Performs state preparation by applying a
    `statePrepUnitary` on the input state, followed by adiabatic state
    preparation using a `adiabaticUnitary`, and finally phase estimation
    with respect to `qpeUnitary`on the resulting state using a
    `phaseEstAlgorithm`.
- uid: microsoft.quantum.simulation.estimateenergy
  summary: |-
    Performs state preparation by applying a
    `statePrepUnitary` on an automatically allocated input state
    phase estimation with respect to `qpeUnitary`on the resulting state
    using a `phaseEstAlgorithm`.
- uid: microsoft.quantum.simulation.estimateenergywithadiabaticevolution
  summary: |-
    Performs state preparation by applying a
    `statePrepUnitary` on an automatically allocated input state,
    followed by adiabatic state preparation using a
    `adiabaticUnitary`, and finally phase estimation with respect to
    `qpeUnitary`on the resulting state using a `phaseEstAlgorithm`.
newtypes:
- uid: microsoft.quantum.simulation.blockencoding
  summary: |-
    Represents a unitary where an arbitrary operator of
    interest is encoded in the top-left block.
- uid: microsoft.quantum.simulation.blockencodingreflection
  summary: Represents a `BlockEncoding` that is also a reflection.
- uid: microsoft.quantum.simulation.evolutiongenerator
  summary: |-
    Represents a dynamical generator as a set of simulatable gates and
    an expansion in terms of that basis.
- uid: microsoft.quantum.simulation.evolutionschedule
  summary: Represents a time-dependent dynamical generator.
- uid: microsoft.quantum.simulation.evolutionset
  summary: |-
    Represents a set of gates that can be readily implemented and used
    to implement simulation algorithms.
- uid: microsoft.quantum.simulation.evolutionunitary
  summary: Represents a unitary time-evolution operator.
- uid: microsoft.quantum.simulation.generatorindex
  summary: |-
    Represents a single primitive term in the set of all dynamical generators, e.g.
    Hermitian operators, for which there exists a map from that generator
    to time-evolution by that generator, through `EvolutionSet`.
- uid: microsoft.quantum.simulation.generatorsystem
  summary: Represents a collection of `GeneratorIndex`es.
- uid: microsoft.quantum.simulation.simulationalgorithm
  summary: Represents a time-independent simulation algorithm.
- uid: microsoft.quantum.simulation.timedependentblockencoding
  summary: Represents a `BlockEncoding` that is controlled by a clock register.
- uid: microsoft.quantum.simulation.timedependentgeneratorsystem
  summary: |-
    Represents a time-dependent dynamical generator as a function
    from time to the value of the dynamical generator at that time.
- uid: microsoft.quantum.simulation.timedependentsimulationalgorithm
  summary: Represents a time-dependent simulation algorithm.
- uid: microsoft.quantum.simulation.unitary
  summary: Represents evolution under a unitary operator.
...
